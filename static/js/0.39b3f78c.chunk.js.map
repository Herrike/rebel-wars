{"version":3,"file":"static/js/0.39b3f78c.chunk.js","mappings":"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","sources":["routes/home/Home.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/draw-planet.ts","routes/planets/Planets.tsx","routes/species/Species.tsx","routes/vehicles/Vehicles.tsx","routes/starships/Starships.tsx"],"sourcesContent":["import React, { FC } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Layout } from '../../components'\r\nimport { useTimeout } from '../../hooks'\r\nimport { HomeProps } from './Home.types'\r\n\r\nconst Home: FC<HomeProps> = ({ introTimeout = 50000 }) => {\r\n  const navigate = useNavigate()\r\n  useTimeout(() => navigate(`planets`), introTimeout)\r\n\r\n  return (\r\n    <Layout>\r\n      <div className='story' data-testid='story'>\r\n        <div className='story_head'>\r\n          <div className='logo'>\r\n            <svg width='634.104' height='271.366' viewBox='0 0 634.10401 271.366'>\r\n              <g id='Layer_2' transform='translate(-29.908,-73.916003)'>\r\n                <g id='g7'>\r\n                  <path\r\n                    d='m 148.718,221.207 8.67,25.461 c 4.691,13.768 8.879,24.779 9.425,24.779 0.009,0 0.017,-0.004 0.024,-0.01 0.6,-0.53 17.57,-49.811 17.57,-49.811 h 32.89 l -39.68,115.619 h -22.86 c 0,0 -24.4,-70.471 -24.3,-70.739 l -25.47,69.851 h -22.63 l -39.18,-115.15 32.73,0.021 c 0,0 17.929,50.821 18.168,50.821 10e-4,0 10e-4,-10e-4 0.002,-0.002 l 17.89,-50.841 h 36.751 M 32.003,213.2 l 3.601,10.584 39.18,115.149 1.845,5.424 h 5.729 22.63 5.598 l 1.918,-5.26 17.685,-48.5 c 1.524,4.434 3.171,9.213 4.818,13.988 6.089,17.655 12.191,35.277 12.191,35.277 l 1.864,5.383 h 5.696 22.86 5.712 l 1.854,-5.403 39.68,-115.618 3.637,-10.598 h -11.204 -32.89 -5.706 l -1.858,5.396 c -2.974,8.635 -6.921,20.031 -10.296,29.676 -0.509,-1.463 -1.039,-3.001 -1.587,-4.611 l -8.669,-25.46 -1.846,-5.421 h -5.727 -36.75 -5.666 l -1.881,5.345 -10.453,29.706 C 90.515,238.551 86.512,227.24 83.452,218.566 l -1.882,-5.334 -5.657,-0.004 -32.73,-0.021 -11.18,-0.007 0,0 z'\r\n                    id='path9'\r\n                    className='svg_fill'\r\n                  />\r\n                </g>\r\n                <g id='g11'>\r\n                  <path\r\n                    d='m 655.258,220.758 -0.075,30.305 c 0,0 -32.643,-0.109 -49.239,-0.109 -5.521,0 -9.266,0.013 -9.444,0.045 -2.86,0.521 -4.681,6.602 -3.87,9.271 0.399,1.35 3.391,5.76 6.63,9.81 3.229,4.051 8.54,10.681 11.78,14.729 8.319,10.381 9.46,12.43 10.229,18.391 1.25,9.681 -3.329,20.16 -11.829,27.07 -8.518,6.93 -8.145,6.979 -71.383,6.979 -0.916,0 -1.835,0 -2.777,0 -38.46,-0.01 -58.8,-0.329 -61.761,-0.989 -5.26,-1.19 -13.64,-8.03 -35.79,-29.28 -7.967,-7.636 -15.309,-14.322 -15.686,-14.324 -0.01,0 -0.015,0.006 -0.015,0.016 l -0.261,44.579 -35.899,-0.159 -0.221,-114.98 h 45.271 34.79 c 24.13,0.871 40.46,24.91 37.21,40.24 -0.74,3.479 -2.62,8.521 -4.181,11.2 -3.21,5.5 -11.38,12.56 -18.011,15.591 -2.449,1.108 -4.449,2.398 -4.449,2.858 0,1.71 8.061,9.649 11.08,10.91 2.579,1.079 10.09,1.319 43.21,1.319 3.882,0 7.408,0.002 10.608,0.002 33.293,0 31.618,-0.24 34.19,-5.741 1.801,-3.83 0.431,-6.12 -12.239,-20.39 -16.051,-15.971 -14.37,-23.621 -14.48,-29.271 -0.229,-6.77 5.102,-28.069 32.812,-28.069 l 73.8,-0.003 m -215.07,53.12 c 15.37,0 18.49,-0.239 21.761,-1.66 11.04,-4.8 11.63,-18.979 1.04,-25.271 -2.319,-1.381 -5.3,-1.609 -21.96,-1.7 l -19.279,-0.101 c 0.159,0.15 -0.061,27.57 -0.061,27.57 0,0 4.829,1.162 18.499,1.162 m 223.089,-61.12 h -8.021 -73.8 c -16.032,0 -25.515,6.328 -30.646,11.637 -8.347,8.633 -10.313,19.504 -10.162,24.629 0.008,0.427 0.003,0.865 -0.002,1.322 -0.073,8.329 1.154,17.758 16.659,33.246 3.065,3.452 8.193,9.239 10.131,12.115 -4.238,0.521 -14.98,0.521 -26.262,0.521 h -4.792 l -5.816,-0.002 c -19.904,0 -36.688,-0.057 -40.128,-0.736 -0.481,-0.314 -1.156,-0.854 -1.898,-1.498 6.877,-4.235 13.83,-10.799 17.104,-16.412 1.987,-3.413 4.178,-9.243 5.098,-13.568 2.04,-9.625 -1.325,-21.236 -9.001,-31.068 -8.956,-11.471 -21.985,-18.334 -35.746,-18.83 l -0.145,-0.006 h -0.145 -34.79 -45.271 -8.016 l 0.016,8.017 0.221,114.979 0.016,7.949 7.949,0.035 35.899,0.159 7.988,0.035 0.047,-7.988 0.155,-26.706 c 0.733,0.696 1.491,1.419 2.269,2.165 24.227,23.24 32.359,29.679 39.562,31.308 1.979,0.441 5.253,1.172 63.523,1.188 h 2.779 c 31.546,0 47.38,0 56.799,-0.91 10.789,-1.043 14.259,-3.49 19.461,-7.725 l 0.173,-0.141 c 10.685,-8.687 16.323,-21.83 14.715,-34.3 -1.048,-8.11 -3.194,-11.479 -11.922,-22.368 l -2.594,-3.24 c -3.04,-3.799 -6.713,-8.387 -9.175,-11.475 -1.986,-2.484 -3.546,-4.689 -4.487,-6.133 1.236,-0.003 2.841,-0.005 4.918,-0.005 16.395,0 48.887,0.108 49.213,0.11 l 8.008,0.026 0.02,-8.008 0.075,-30.306 0.021,-8.016 0,0 z m -233.538,52.828 c 0.013,-2.021 0.025,-4.287 0.038,-6.557 0.01,-2 0.019,-4.004 0.022,-5.84 l 11.187,0.058 c 6.429,0.035 16.103,0.088 17.989,0.623 2.407,1.461 3.75,3.72 3.604,6.06 -0.08,1.264 -0.682,3.588 -3.821,4.951 -1.75,0.76 -4.54,0.997 -18.57,0.997 -4.45,0 -7.883,-0.129 -10.449,-0.292 l 0,0 z'\r\n                    id='path13'\r\n                    className='svg_fill'\r\n                  />\r\n                </g>\r\n                <g id='g15'>\r\n                  <path\r\n                    d='m 312.908,220.287 40.29,115.92 -32.83,0.15 -5.45,-17.41 -58.7,-0.471 -5.18,17.431 -32.5,-0.341 39.78,-115.229 54.59,-0.05 m -26.401,16.996 c -0.083,0.333 -5.144,14.219 -10.222,28.104 -5.12,14 -10.257,28 -10.328,28.109 0,0.001 -10e-4,0.001 0,0.001 l 0,0 c 0,0 0,0 0,-0.001 0.136,-0.04 18.316,-0.08 29.968,-0.08 5.453,0 9.475,0.009 9.55,0.029 10e-4,0.004 10e-4,0.005 10e-4,0.005 0,0 0,-10e-4 0,-0.003 0,0 0,0 -10e-4,-0.002 -0.204,-0.529 -18.909,-55.486 -18.968,-56.162 10e-4,-0.004 10e-4,-0.006 10e-4,-0.006 l 0,0 c -10e-4,0 -10e-4,0.002 -10e-4,0.006 m 32.088,-25.001 -5.693,0.005 -54.59,0.051 -5.696,0.005 -1.859,5.386 -39.78,115.229 -3.623,10.494 11.102,0.115 32.5,0.341 6.033,0.063 1.719,-5.782 3.466,-11.662 46.854,0.375 3.708,11.848 1.765,5.638 5.907,-0.026 32.829,-0.15 11.195,-0.052 -3.676,-10.574 -40.29,-115.92 -1.871,-5.384 0,0 z m -41.123,73.142 c 1.515,-4.129 3.556,-9.71 6.327,-17.289 0.869,-2.376 1.664,-4.551 2.393,-6.545 0.663,1.956 1.385,4.084 2.169,6.398 0.646,1.906 3.485,10.27 5.92,17.428 -7.24,0 -12.69,10e-4 -16.809,0.008 l 0,0 z'\r\n                    id='path17'\r\n                    className='svg_fill'\r\n                  />\r\n                </g>\r\n                <g id='g19'>\r\n                  <path\r\n                    d='m 326.488,81.928 v 28.6 h -57.28 v 87.47 h -34.15 v -87.54 l -66.86,0.19 c -8.06,0 -9.14,6.42 -9.14,8.88 0,3.02 1.97,6.04 12.79,19.74 7.02,8.9 13.47,17.78 14.32,19.72 4.64,10.68 -1.36,27.32 -12.29,34.08 -7.79,4.813 -6.459,4.931 -64.308,4.931 -2.974,0 -6.096,0 -9.392,0 h -62.27 v -32.13 h 97.9 l 2.89,-2.01 c 1.95,-1.36 3.08,-3.23 3.51,-5.79 0.6,-3.68 0.29,-4.16 -11.8,-17.78 -14.29,-16.1 -15.8,-19.04 -15.06,-29.32 0.84,-11.73 11.3,-28.77 29.58,-28.77 l 181.56,-0.271 m 8,-8.012 -8.013,0.012 -181.56,0.27 c -10.458,0 -20.171,4.518 -27.342,12.722 -5.814,6.652 -9.63,15.429 -10.206,23.477 -0.973,13.511 2.137,18.393 17.056,35.202 4.33,4.877 8.447,9.516 9.821,11.486 -0.022,0.079 -0.042,0.13 -0.054,0.159 -0.015,0.012 -0.038,0.03 -0.07,0.052 l -0.822,0.572 h -95.39 -8 v 8 32.13 8 h 8 62.27 4.937 4.455 c 28.522,0 42.6,-0.027 50.894,-0.635 9.49,-0.695 12.518,-2.323 17.054,-5.14 l 0.566,-0.351 c 14.262,-8.821 21.612,-29.827 15.422,-44.074 -1.91,-4.358 -14.003,-19.746 -15.376,-21.486 -3.796,-4.807 -10.062,-12.74 -11.054,-15.036 0.024,-0.193 0.071,-0.393 0.121,-0.532 0.165,-0.042 0.481,-0.098 1.001,-0.098 l 58.86,-0.167 v 79.517 8 h 8 34.15 8 v -8 -79.47 h 49.28 8 v -8 -28.6 -8.01 l 0,0 z'\r\n                    id='path21'\r\n                    className='svg_fill'\r\n                  />\r\n                </g>\r\n                <g id='g23'>\r\n                  <path\r\n                    d='m 419.548,82.857 40.18,116.22 -32.77,-0.18 -5.32,-17.41 -58.439,-0.26 -5.221,16.77 h -33.369 l 39.739,-115.14 h 55.2 m -46.811,73.621 39.801,-0.05 c 10e-4,0 10e-4,0.001 10e-4,0.001 0.136,0 -19.342,-57.201 -19.472,-57.241 l 0,0 c -0.142,-0.005 -20.779,57.29 -20.33,57.29 m 52.51,-81.621 h -5.699 -55.2 -5.701 l -1.86,5.39 -39.74,115.141 -3.662,10.61 h 11.225 33.37 5.889 l 1.75,-5.623 3.461,-11.121 46.632,0.207 3.599,11.774 1.721,5.629 5.887,0.033 32.77,0.18 11.297,0.062 -3.691,-10.676 -40.18,-116.22 -1.868,-5.386 0,0 z m -41.396,73.607 c 2.468,-7.027 5.904,-16.657 9.014,-25.312 2.948,8.644 6.209,18.245 8.588,25.29 l -17.602,0.022 0,0 z'\r\n                    id='path25'\r\n                    className='svg_fill'\r\n                  />\r\n                </g>\r\n                <g id='g27'>\r\n                  <path\r\n                    d='m 532.396,82.857 c 25.921,0 43.91,0.37 47.37,0.97 8,1.39 15.23,5.66 20.65,12.22 5.67,6.86 6.97,10.14 7.71,19.54 1.061,13.27 -5.25,24.72 -17.7,32.15 -3.63,2.17 -7.359,4.28 -8.29,4.7 -1.43,0.65 -1.239,1.27 1.32,4.27 1.649,1.93 4.51,4.68 6.35,6.11 l 3.36,2.61 62.08,0.89 0.609,31.68 h -38.061 c -29.439,0 -38.86,-0.27 -41.62,-1.2 -4.13,-1.4 -14.069,-9.82 -34.271,-29.04 l -14.42,-13.72 0.152,43.96 H 490.592 V 82.857 h 41.804 m -5.458,51.77 h 19.671 c 19.141,0 19.739,-0.06 22.47,-2.11 4.881,-3.66 6.609,-7.43 6.091,-13.22 -0.53,-5.97 -2.83,-9.08 -8.601,-11.58 -3.25,-1.42 -6.381,-1.65 -21.721,-1.65 h -17.91 v 28.56 m 5.458,-59.77 h -41.8 -8 v 8 115.14 8 h 8 37.043 8.028 l -0.028,-8.028 -0.088,-25.216 0.84,0.799 c 24.986,23.773 32.356,29.173 37.218,30.821 3.733,1.259 9.982,1.624 44.188,1.624 h 38.061 8.154 l -0.156,-8.154 -0.609,-31.68 -0.148,-7.734 -7.734,-0.111 -59.402,-0.851 -1.245,-0.967 c -0.396,-0.309 -0.876,-0.717 -1.389,-1.179 0.446,-0.264 0.854,-0.507 1.207,-0.717 15.003,-8.953 22.866,-23.407 21.569,-39.653 -0.863,-10.959 -2.82,-15.896 -9.52,-24 -6.584,-7.969 -15.621,-13.298 -25.447,-15.005 -5.46,-0.947 -32.881,-1.089 -48.742,-1.089 l 0,0 z m 2.542,39.21 h 9.91 c 14.027,0 16.806,0.233 18.518,0.981 3.25,1.408 3.58,2.091 3.835,4.957 0.256,2.848 -0.097,3.994 -2.922,6.112 -0.093,0.069 -0.164,0.123 -0.223,0.166 -1.865,0.345 -8.786,0.345 -17.447,0.345 h -11.67 l -10e-4,-12.561 0,0 z'\r\n                    id='path29'\r\n                    className='svg_fill'\r\n                  />\r\n                </g>\r\n              </g>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div className='story_body'>\r\n          <p className='text text--center'>Episode XX</p>\r\n          <h2 className='text text--center text--uppercase'>The Alliance&apos;s Reckoning</h2>\r\n          <p>\r\n            The Rebel Alliance is planning an attack on Galactic Empire to restore the Galactic\r\n            Republic. Princess Leia and Fleet Admiral Gial Ackbar have been tasked with the job of\r\n            coming up with a battleplan to assist the Alliance to defeat the Empire.\r\n          </p>\r\n          <p>\r\n            Thankfully the Rebel Alliance decided to play it smart and scout all the planets and its\r\n            species in advance and decide upon a location based on data. They have hired you as\r\n            their Tech Expert to make sense of this vast universe and the myriad planets, species,\r\n            climates etc.\r\n          </p>\r\n          <p>\r\n            Create appropriate views to display the above data in the most accessible way so that\r\n            Admiral Ackbar and Princess Leia can defeat the Galactic Empire...\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n// https://codepen.io/loktar00/pen/AYxMvO (kudos to this dev)\r\nimport { PlanetAttributes, PlanetColor, PlanetComposition, PreparedCanvas } from \"./draw-planet.types\"\r\n\r\nexport const drawPlanet = (ctx: CanvasRenderingContext2D, planetAttrs: PlanetAttributes) => {\r\n    const {color, rad, x: xc, y: yc} = planetAttrs\r\n\r\n    ctx.strokeStyle = '#111'\r\n    ctx.fillStyle = \"#000\";\r\n    ctx.beginPath();\r\n    ctx.arc(xc, yc, rad, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n\r\n    ctx.fillStyle = \"rgb(\" + color.r + \",\" + color.g + \",\" + color.b + \")\";\r\n\r\n    for (let y = -rad; y < rad; y++) {\r\n        const x1 = Math.round(Math.sqrt(rad * rad - y * y));\r\n        for (let x = -x1; x < x1; x++) {\r\n            const n = Math.round(Math.random() * x1)/1.5;\r\n          \r\n            if (n > x1 + x) {\r\n                ctx.fillRect(x + xc, y + yc, 1.5, 1.25);\r\n                ctx.stroke()\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const getRGBAColor = (red: number, green: number, blue: number): PlanetColor => ({\r\n    r: red,\r\n    g: green,\r\n    b: blue\r\n})\r\n\r\nexport const getColorFromPlanetAttributes = (planetComposition: PlanetComposition): PlanetColor => {\r\n    const {surface_water, terrain} = planetComposition\r\n    const water = parseFloat(surface_water)\r\n    const surface = terrain.toLowerCase()\r\n    if(!isNaN(water) && water >= 40){\r\n        return getRGBAColor(70, 130, 180)\r\n    }\r\n    if(['plains', 'rainforests', 'forests', 'jungles', 'grass', 'swamps', 'verdant'].some(s => surface.includes(s))){\r\n        return getRGBAColor(40, 180, 99)\r\n    }\r\n    if(surface.includes('desert')){\r\n        return getRGBAColor(245, 176, 65)\r\n    }\r\n    else if(['ice', 'frozen'].some(s => surface.includes(s))){\r\n        return getRGBAColor(255, 255, 255)\r\n    }\r\n    else if(['lava', 'volcano'].some(s => surface.includes(s))){\r\n        return getRGBAColor(231, 76, 60)\r\n    }\r\n    else if(['mountains', 'canyons', 'rocky'].some(s => surface.includes(s))){\r\n        return getRGBAColor(120, 66, 18)\r\n    }\r\n    else if(['urban', 'cityscape'].some(s => surface.includes(s))){\r\n        return getRGBAColor(100, 100, 100)\r\n    }\r\n    else if(['asteroid', 'unknown','ash'].some(s => surface.includes(s))){\r\n        return getRGBAColor(25, 25, 25)\r\n    }\r\n    return {\r\n        r: ~~ (Math.random() * 255),\r\n        g: ~~ (Math.random() * 255),\r\n        b: ~~ (Math.random() * 255)\r\n    }\r\n}\r\n\r\nexport const getPlanetAttributes = (width: number, height: number, planetComposition: PlanetComposition) => {\r\n    const color = getColorFromPlanetAttributes(planetComposition)\r\n    return {\r\n        rad: ~~ (height / 2),\r\n        x: ~~ (width / 2),\r\n        y: ~~ (height / 2),\r\n        color\r\n    }\r\n}\r\n\r\nexport const prepareCanvas = (canvas: HTMLCanvasElement, planetComposition: PlanetComposition): PreparedCanvas => {\r\n    const ctx = canvas.getContext('2d')!\r\n    const width = 100\r\n    const height = 100\r\n    const planetAttrs = getPlanetAttributes(width, height, planetComposition)\r\n   \r\n    return {\r\n        canvas,\r\n        ctx,\r\n        width,\r\n        height,\r\n        planetAttrs\r\n    }\r\n}\r\n\r\nexport const renderPlanet = (canvasEl: HTMLCanvasElement, planetComposition: PlanetComposition) => {\r\n    const {ctx, planetAttrs} = prepareCanvas(canvasEl, planetComposition)\r\n    drawPlanet(ctx, planetAttrs);\r\n}","import React, { FC, useContext, useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nimport { SectionContext } from '../../contexts/sectionContext'\r\nimport {\r\n  isFilterType,\r\n  isGenericCollection,\r\n  isGenericResponseData,\r\n  isPlanetsCollection\r\n} from '../../utils/typeguards'\r\nimport { filterContentByStrategy, getCommissionerNameBySection } from '../../utils/filters'\r\nimport { Planet } from './Planets.types'\r\nimport { renderPlanet } from '../../utils/draw-planet'\r\n\r\nconst Filter = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Filter }))\r\n)\r\n\r\nconst Pagination = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Pagination }))\r\n)\r\n\r\nconst PlanetPreview: FC<{ planet: Planet }> = ({ planet }) => {\r\n  const { name, diameter, gravity, surface_water, terrain } = planet\r\n  const key = name.toLowerCase()\r\n  const drawPlanet = useRef<HTMLCanvasElement>(null)\r\n  useLayoutEffect(() => {\r\n    if (drawPlanet.current) {\r\n      renderPlanet(drawPlanet.current, { diameter, surface_water, terrain })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <article key={key}>\r\n      <h3>{name}</h3>\r\n      <div className='planet-card'>\r\n        <canvas ref={drawPlanet}>{''}</canvas>\r\n        <ul>\r\n          <li>diameter: {diameter}</li>\r\n          <li>gravity: {gravity}</li>\r\n          <li>surface water: {surface_water}</li>\r\n          <li>terrain: {terrain}</li>\r\n        </ul>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nconst Planets: FC = () => {\r\n  const { activeSection, contentSection } = useContext(SectionContext)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const [planets, setPlanets] = useState<Planet[] | null>(null)\r\n  const [activeFilter, setActiveFilter] = useState<boolean>(false)\r\n  const [page, setPage] = useState<string>('1')\r\n\r\n  useEffect(() => {\r\n    const filter = `${activeFilter}`\r\n    if (activeFilter === true) {\r\n      setSearchParams({ page: `${page}`, filter })\r\n    } else {\r\n      setSearchParams({ page: `${page}` })\r\n    }\r\n  }, [activeFilter, page])\r\n\r\n  useEffect(() => {\r\n    if (isGenericResponseData(contentSection) && isGenericCollection(contentSection.results)) {\r\n      const updatedResults = [...contentSection.results]\r\n      if (searchParams.get('filter') === 'true' && isFilterType(activeSection)) {\r\n        const filteredResults = filterContentByStrategy(updatedResults, activeSection)\r\n        if (filteredResults.length && isPlanetsCollection(filteredResults)) {\r\n          setPlanets(filteredResults)\r\n        } else {\r\n          setPlanets([])\r\n        }\r\n      } else if (isPlanetsCollection(updatedResults)) {\r\n        setPlanets(updatedResults)\r\n      }\r\n    }\r\n  }, [contentSection, searchParams])\r\n\r\n  return (\r\n    <>\r\n      <Filter\r\n        section={activeSection}\r\n        activeFilter={activeFilter}\r\n        setActiveFilter={setActiveFilter}\r\n      />\r\n      <h2>{activeSection}</h2>\r\n\r\n      <section className='grid'>\r\n        {planets?.map((planet) => (\r\n          <div key={planet.name.toLowerCase()}>\r\n            <PlanetPreview planet={planet} />\r\n          </div>\r\n        ))}\r\n        {!planets?.length && activeFilter && (\r\n          <p>\r\n            Scanner results: no <strong>{activeSection}</strong> found for{' '}\r\n            {getCommissionerNameBySection(activeSection, true)} strategy\r\n          </p>\r\n        )}\r\n      </section>\r\n      {isGenericResponseData(contentSection) && contentSection?.count > 10 && (\r\n        <Pagination\r\n          items={contentSection.count}\r\n          page={page}\r\n          setPage={setPage}\r\n          disabled={activeFilter}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Planets\r\n","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nimport { SectionContext } from '../../contexts/sectionContext'\r\nimport {\r\n  isFilterType,\r\n  isGenericCollection,\r\n  isGenericResponseData,\r\n  isSpeciesCollection\r\n} from '../../utils/typeguards'\r\nimport { filterContentByStrategy, getCommissionerNameBySection } from '../../utils/filters'\r\nimport { Specie } from './Species.types'\r\n\r\nconst Filter = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Filter }))\r\n)\r\n\r\nconst Pagination = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Pagination }))\r\n)\r\n\r\nconst Species: FC = () => {\r\n  const { activeSection, contentSection } = useContext(SectionContext)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const [species, setSpecies] = useState<Specie[] | null>(null)\r\n  const [activeFilter, setActiveFilter] = useState<boolean>(false)\r\n  const [page, setPage] = useState('1')\r\n\r\n  useEffect(() => {\r\n    const filter = `${activeFilter}`\r\n    if (activeFilter === true) {\r\n      setSearchParams({ page: `${page}`, filter })\r\n    } else {\r\n      setSearchParams({ page: `${page}` })\r\n    }\r\n  }, [activeFilter, page])\r\n\r\n  useEffect(() => {\r\n    if (isGenericResponseData(contentSection) && isGenericCollection(contentSection?.results)) {\r\n      const updatedResults = [...contentSection.results]\r\n      if (searchParams.get('filter') === 'true' && isFilterType(activeSection)) {\r\n        const filteredResults = filterContentByStrategy(updatedResults, activeSection)\r\n        if (filteredResults.length && isSpeciesCollection(filteredResults)) {\r\n          setSpecies(filteredResults)\r\n        } else {\r\n          setSpecies([])\r\n        }\r\n      } else if (isSpeciesCollection(updatedResults)) {\r\n        setSpecies(updatedResults)\r\n      }\r\n    }\r\n  }, [contentSection, searchParams])\r\n\r\n  return (\r\n    <>\r\n      <Filter\r\n        section={activeSection}\r\n        activeFilter={activeFilter}\r\n        setActiveFilter={setActiveFilter}\r\n      />\r\n      <h2>{activeSection}</h2>\r\n      <section className='grid'>\r\n        {species?.map(({ name, classification, designation, language }) => {\r\n          const key = name.toLowerCase()\r\n          return (\r\n            <article key={key}>\r\n              <h3>{name}</h3>\r\n              <ul>\r\n                <li>classification: {classification}</li>\r\n                <li>designation: {designation}</li>\r\n                <li>language: {language}</li>\r\n              </ul>\r\n            </article>\r\n          )\r\n        })}\r\n        {!species?.length && activeFilter && (\r\n          <p>\r\n            Scanner results: no <strong>{activeSection}</strong> found for{' '}\r\n            {getCommissionerNameBySection(activeSection, true)} strategy\r\n          </p>\r\n        )}\r\n      </section>\r\n      {isGenericResponseData(contentSection) && contentSection?.count > 10 && (\r\n        <Pagination\r\n          items={contentSection.count}\r\n          page={page}\r\n          setPage={setPage}\r\n          disabled={activeFilter}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Species\r\n","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nimport { SectionContext } from '../../contexts/sectionContext'\r\nimport { isFilterType, isGenericResponseData, isVehiclesCollection } from '../../utils/typeguards'\r\nimport { filterContentByStrategy, getVehicleType } from '../../utils/filters'\r\nimport { Vehicle } from './Vehicles.types'\r\n\r\nconst Pagination = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Pagination }))\r\n)\r\n\r\nconst Vehicles: FC = () => {\r\n  const { activeSection, contentSection } = useContext(SectionContext)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const [vehicles, setVehicles] = useState<Vehicle[] | null>(null)\r\n  const [page, setPage] = useState<string>('1')\r\n\r\n  useEffect(() => {\r\n    setSearchParams({ page: `${page}` })\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    if (isGenericResponseData(contentSection) && isVehiclesCollection(contentSection?.results)) {\r\n      const { results } = contentSection\r\n      let updatedResults = [...results]\r\n      if (searchParams.get('filter') === 'true' && isFilterType(activeSection)) {\r\n        const filteredResults = filterContentByStrategy(updatedResults, activeSection)\r\n        if (isVehiclesCollection(filteredResults)) {\r\n          updatedResults = filteredResults\r\n        }\r\n      }\r\n      setVehicles(updatedResults)\r\n    }\r\n  }, [contentSection, searchParams])\r\n\r\n  return (\r\n    <>\r\n      <h2>{activeSection}</h2>\r\n      <section className='grid'>\r\n        {vehicles?.map(({ name, vehicle_class, model, max_atmosphering_speed, manufacturer }) => {\r\n          const key = name.toLowerCase()\r\n          return (\r\n            <article key={key}>\r\n              <h3>{name}</h3>\r\n              <ul>\r\n                <li>model: {model}</li>\r\n                <li>class: {vehicle_class}</li>\r\n                <li>type: {getVehicleType(max_atmosphering_speed)}</li>\r\n                <li>max atmosphering speed: {max_atmosphering_speed}</li>\r\n                <li>manufacturer: {manufacturer}</li>\r\n              </ul>\r\n            </article>\r\n          )\r\n        })}\r\n      </section>\r\n      {isGenericResponseData(contentSection) && contentSection?.count > 10 && (\r\n        <Pagination items={contentSection.count} page={page} setPage={setPage} disabled={false} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Vehicles\r\n","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nimport { SectionContext } from '../../contexts/sectionContext'\r\nimport {\r\n  isFilterType,\r\n  isGenericCollection,\r\n  isGenericResponseData,\r\n  isStarshipsCollection\r\n} from '../../utils/typeguards'\r\nimport { filterContentByStrategy, getCommissionerNameBySection } from '../../utils/filters'\r\nimport { Starship } from './Starships.types'\r\n\r\nconst Filter = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Filter }))\r\n)\r\n\r\nconst Pagination = React.lazy(() =>\r\n  import('../../components').then((module) => ({ default: module.Pagination }))\r\n)\r\n\r\nconst Starships: FC = () => {\r\n  const { activeSection, contentSection } = useContext(SectionContext)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const [starships, setStarships] = useState<Starship[] | null>(null)\r\n  const [activeFilter, setActiveFilter] = useState<boolean>(false)\r\n  const [page, setPage] = useState<string>('1')\r\n\r\n  useEffect(() => {\r\n    const filter = `${activeFilter}`\r\n    if (activeFilter === true) {\r\n      setSearchParams({ page: `${page}`, filter })\r\n    } else {\r\n      setSearchParams({ page: `${page}` })\r\n    }\r\n  }, [activeFilter, page])\r\n\r\n  useEffect(() => {\r\n    if (isGenericResponseData(contentSection) && isGenericCollection(contentSection?.results)) {\r\n      const updatedResults = [...contentSection.results]\r\n      if (searchParams.get('filter') === 'true' && isFilterType(activeSection)) {\r\n        const filteredResults = filterContentByStrategy(updatedResults, activeSection)\r\n        if (filteredResults.length && isStarshipsCollection(filteredResults)) {\r\n          setStarships(filteredResults)\r\n        } else {\r\n          setStarships([])\r\n        }\r\n      } else if (isStarshipsCollection(updatedResults)) {\r\n        setStarships(updatedResults)\r\n      }\r\n    }\r\n  }, [contentSection, searchParams])\r\n\r\n  return (\r\n    <>\r\n      <Filter\r\n        section={activeSection}\r\n        activeFilter={activeFilter}\r\n        setActiveFilter={setActiveFilter}\r\n      />\r\n      <h2>{activeSection}</h2>\r\n      <section className='grid'>\r\n        {starships?.map(\r\n          ({\r\n            hyperdrive_rating,\r\n            manufacturer,\r\n            max_atmosphering_speed,\r\n            model,\r\n            name,\r\n            starship_class\r\n          }) => {\r\n            const key = name.toLowerCase()\r\n            return (\r\n              <article key={key}>\r\n                <h3>{name}</h3>\r\n                <ul>\r\n                  <li>model: {model}</li>\r\n                  <li>class: {starship_class}</li>\r\n                  <li>manufacturer: {manufacturer}</li>\r\n                  <li>hyperdrive rating: {hyperdrive_rating}</li>\r\n                  <li>max atmosphering speed: {max_atmosphering_speed}</li>\r\n                </ul>\r\n              </article>\r\n            )\r\n          }\r\n        )}\r\n        {!starships?.length && activeFilter && (\r\n          <p>\r\n            Scanner results: no <strong>{activeSection}</strong> found for{' '}\r\n            {getCommissionerNameBySection(activeSection, true)} strategy\r\n          </p>\r\n        )}\r\n      </section>\r\n      {isGenericResponseData(contentSection) && contentSection?.count > 10 && (\r\n        <Pagination\r\n          items={contentSection.count}\r\n          page={page}\r\n          setPage={setPage}\r\n          disabled={activeFilter}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Starships\r\n"],"names":["introTimeout","navigate","useNavigate","useTimeout","Layout","className","width","height","viewBox","id","transform","d","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","getRGBAColor","red","green","blue","r","g","b","getPlanetAttributes","planetComposition","color","surface_water","terrain","water","parseFloat","surface","toLowerCase","isNaN","some","s","includes","Math","random","getColorFromPlanetAttributes","rad","x","y","renderPlanet","canvasEl","canvas","ctx","getContext","planetAttrs","prepareCanvas","xc","yc","strokeStyle","fillStyle","beginPath","arc","PI","fill","closePath","x1","round","sqrt","fillRect","stroke","drawPlanet","Filter","React","then","module","default","Pagination","PlanetPreview","planet","name","diameter","gravity","key","useRef","useLayoutEffect","current","ref","useContext","SectionContext","activeSection","contentSection","useSearchParams","searchParams","setSearchParams","useState","planets","setPlanets","activeFilter","setActiveFilter","page","setPage","useEffect","filter","isGenericResponseData","isGenericCollection","results","updatedResults","get","isFilterType","filteredResults","filterContentByStrategy","length","isPlanetsCollection","section","map","getCommissionerNameBySection","count","items","disabled","species","setSpecies","isSpeciesCollection","classification","designation","language","vehicles","setVehicles","isVehiclesCollection","vehicle_class","model","max_atmosphering_speed","manufacturer","getVehicleType","starships","setStarships","isStarshipsCollection","hyperdrive_rating","starship_class"],"sourceRoot":""}